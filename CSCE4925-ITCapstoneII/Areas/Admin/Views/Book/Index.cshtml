@model SQLSolutions.Areas.Admin.ViewModels.BookIndex

@{
    ViewBag.Title = "Index";
    if (Session["username"] == null || Session["isAdmin"].Equals(false))
    {
        Response.Redirect("~/Home/index");
}

}

<h2> Books</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@


@*search bar*@

<form method="POST">
    <div class="row" id="search-group">
        <div class="col-lg-6">
            <div class="input-group">
                @Html.TextBox("searchBook", ViewBag.currentFilter as string, new {@class = "form-control"})
                @*<input type="search" class="form-control" name="searchBook"/>*@
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                            <i class="glyphicon glyphicon-search"></i>
                        Search
                    </button>
                </span>
            </div>
        </div>
        @*add new book button*@
        <div class="btn-toolbar-right" id="btn-add-book">
            <a href="@Url.Action("Create")" class="btn btn-primary">
                <i class="glyphicon glyphicon-plus"></i>
                Add New Book
            </a>
        </div>
    </div>
      
</form>


<table class="table">
    <tr>
        <th class="row-assetnum">
            @Html.DisplayName("AssetNum")
        </th>
        <th class="row-isbn">
            @Html.DisplayName("ISBN")
        </th>
        <th class="row-title">
            @Html.DisplayName("Title")
        </th>
        <th class="row-author">
            @Html.DisplayName("Author")
        </th>
        <th class="row-course">
            @Html.DisplayName("Course")
        </th>
        <th class="row-year">
            @Html.DisplayName("Year")
        </th>
        <th class="row-edition">
            @Html.DisplayName("Edition")
        </th>
        <th class="row-required">
            @Html.DisplayName("Required")
        </th>
        <th class="row-available">
            @Html.DisplayName("Available")
        </th>
        <th class="row-butns"></th>
    </tr>

    @foreach (var item in Model.Books)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AssetNum)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Isbn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseSection)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Edition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsRequired)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InStock)
            </td>
            <td>

                <div class="btn-group">
                    <a href="@Url.Action("Edit", new {id = item.AssetNum})" class="btn btn-xs btn-primary">
                        <i class="glyphicon glyphicon-edit"></i>
                        Edit
                    </a>

                    <a href="@Url.Action("Delete", new {id = item.AssetNum})" class="btn btn-xs btn-danger"
                       data-post="Are you shure you want to delete @item.Title for the @item.CourseSection course?">
                        <i class="glyphicon glyphicon-remove"></i>
                        Delete
                    </a>
                </div>
            </td>
        </tr>
    }

</table>
@*check if no records were found then display message*@
@if (!Model.Books.Any())
{
    @Html.DisplayName("No records were found")
}



@Html.PagedListPager(Model.Books, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter }))