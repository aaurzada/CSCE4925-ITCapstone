@model SQLSolutions.Areas.Admin.ViewModels.TransactionEdit

@{
    ViewBag.Title = "Edit";
    {
        if (Session["username"] == null || Session["isAdmin"].Equals(false))
        {
            Response.Redirect("~/Home/index");
        }
    }

}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TransactionEdit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-xs-12 col-md-8">
                @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AssetNum, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.AssetNum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.AssetNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Isbn, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.Isbn, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Isbn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseSection, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.CourseSection, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CourseSection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Euid, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.Euid, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Euid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheckoutDate, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.CheckoutDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CheckoutDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-xs-4 col-md-2" })
            <div class="col-xs-12 col-md-8">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @id = "datepicker2" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-xs-12 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>
