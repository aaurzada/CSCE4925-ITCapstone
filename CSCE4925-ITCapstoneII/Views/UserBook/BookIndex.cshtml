@using PagedList.Mvc
@model SQLSolutions.ViewModel.UserBookIndex
@{
    ViewBag.Title = "BookIndex";
}

<h2>Book List</h2>
<form method="POST">
    <div class="row" id="search-group">
        <div class="col-lg-6">
            <div class="input-group">
                @Html.TextBox("searchBook", ViewBag.currentFilter as string, new { @class = "form-control" })
                @*<input type="search" class="form-control" name="searchBook"/>*@
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">
                        <i class="glyphicon glyphicon-search"></i>
                        Search
                    </button>
                </span>
            </div>
        </div>
    </div>

</form>

<table class="table">
    <tr>
        
        <th class="user-row-isbn">
            @Html.DisplayName("ISBN")
        </th>
        <th class="user-row-title">
            @Html.DisplayName("Title")
        </th>
        <th class="user-row-author">
            @Html.DisplayName("Author")
        </th>
        <th class="user-row-course">
            @Html.DisplayName("Course")
        </th>
        <th class="user-row-year">
            @Html.DisplayName("Year")
        </th>
        <th class="user-row-edition">
            @Html.DisplayName("Edition")
        </th>
        <th class="user-row-required">
            @Html.DisplayName("Required")
        </th>
        <th class="user-row-available">
            @Html.DisplayName("Available")
        </th>
    </tr>

    @foreach (var item in Model.UserBooks)
    {
        <tr>
           
            <td>
                @Html.DisplayFor(modelItem => item.Isbn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseSection)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Edition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsRequired)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InStock)
            </td>
           
        </tr>
    }

</table>
@*check if no records were found then display message*@
@if (!Model.UserBooks.Any())
{
    @Html.DisplayName("No records were found")
}

@Html.PagedListPager(Model.UserBooks, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter }))